dist: trusty
sudo: false
language: php
php:
  - '7.0.21'

env:
  global:
    - SYMFONY_ENV=test
    - SYMFONY_PHPUNIT_DIR=$HOME/.symfony-phpunit
    - PHPUNIT=vendor/symfony/phpunit-bridge/bin/simple-phpunit
  matrix:
    - TESTSUITE=unittests
    - TESTSUITE=functional
    - TESTSUITE=browser
    - TESTSUITE=lint

services:
  # ElasticSearch takes few seconds to start, but it also takes a while until
  # we start executing the tests, so there is no need to wait for it to be
  # up and running.
  # https://docs.travis-ci.com/user/database-setup/#ElasticSearch
  - elasticsearch

addons:
  chrome: stable

cache:
  directories:
    - $HOME/.composer/cache/files
    - $HOME/.symfony-phpunit
    - node_modules

stages:
  - test
  - name: deploy
    if: branch = dev

before_install:
  - INI=~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - echo date.timezone = Europe/Berlin >> $INI
  - echo memory_limit = -1 >> $INI
  - |
    if [ ${TESTSUITE} == "browser" ] || [ "$TESTSUITE" == "lint" ]; then
      phpenv config-rm xdebug.ini || echo "xdebug not available";
    fi;

install:
  - composer install -n --no-suggest --no-progress --ansi
  - |
    if [ ${TESTSUITE} == "functional" ] || [ "$TESTSUITE" == "browser" ]; then
      npm install -g npm
      npm install;
      npm run prod;
    fi;

before_script:
  - |
    if [ ${TESTSUITE} == "functional" ] || [ "$TESTSUITE" == "browser" ]; then
      php bin/console doctrine:schema:create -n
      php bin/console app:elasticsearch:reindex
    fi;

script:
  - set -e
  - |
    if [ ${TESTSUITE} == "browser" ]; then
      bash scripts/prepare-browser-tests.sh
      sleep 5
      $PHPUNIT --testsuite $TESTSUITE
    elif [ ${TESTSUITE} == "lint" ]; then
      php bin/console lint:twig app
      php bin/console lint:yaml app
      php bin/console security:check --end-point=http://security.sensiolabs.org/check_lock
    else
      $PHPUNIT --testsuite $TESTSUITE --coverage-clover=coverage.xml
      bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy
    fi;

jobs:
  include:
    - stage: deploy
      services: []
      env:
        # Encrypted SSH_PORT
        - secure: f4YeypBxXD4w4lRlHrOs6CO3LaO2sGOIYb5VYQFelOw1UbdYitgqHrbsD7avsMZEzzHj8b9QHvfpmu3jtPS+63J2lR1TRT0F0bdzf4pfkTM7Ucw9nIJcxiAuNQLwSzFr/zvAvshP/FiR8ex3jJsnjDlsvV0uJl7PDof+n81tOEGU0VJa4HtBiC86+GPr3ckkl47NCPtHtyAVOzHHZN8oNmHDqh6AWHC/irrz56+2e2rmgqrgKk530YbJTyjejrVVNgNUePUVYm5JNX1anH2plRecFyN3Ov6VJsP5U8P9ej/433igJ/l14euPYFaE3L6deyBfVQ64qGA19oGEbPMdpgUuP8NFbCB+FohmzFRzEZcYQvPam7+N6849u9DdV/rqImw3USjKcLKqFG6l056x/tXBQFMKHJ/jx9/2WuCGg2kd5fCQyZWB2avPq8ifHOkoT9mJAVWwD3u1GfsRJgDCnz8iXCutsFNVE0WGz4trqd3Oni03wZ7dh7RCiF/lTzsL4Py8bFUfl1JS3Z3G5dxR/9hpuhl1Z0YV7sekwpYBJmP4lEX3LMy04XTgMNYitGIQs8GgHKVxSpD0FRGxMcpjPyRcS85gaSvQreY8aCubC8NEE2HNXS96RGFrp7w3H/yyAVVqkTiTX4MAYqudLohBDYUJCz85lawEk648Vup61e8=
      before_install: skip
      install: skip
      before_script: skip
      script: skip
      after_script: skip
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_d7464a3e89e9_key -iv $encrypted_d7464a3e89e9_iv -in scripts/deployment_id_rsa.enc -out /tmp/deployment_id_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/deployment_id_rsa
        - ssh-add /tmp/deployment_id_rsa
        # Add hashed public host keys to known hosts
        - echo "|1|/o5a0+nceYEVEmz2IzW3gFdfUjQ=|nht4u7Jzhx0LvWoAyQgb2BpRI8U= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAaH7fLxrEAQA5GVcNqLTvXYRBfd8Ap0LMQLehsGkC8/G3pQBMITd38oqmfdlxCtvu4qdAYecmZ6a/B9E+vDGG4=" >> $HOME/.ssh/known_hosts
        - echo "|1|9zrUMwfMs5nMGI51R1y6SUCKu5Y=|dvwXduUFjsR1jqF9w/JjPRcO41w= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAaH7fLxrEAQA5GVcNqLTvXYRBfd8Ap0LMQLehsGkC8/G3pQBMITd38oqmfdlxCtvu4qdAYecmZ6a/B9E+vDGG4=" >> $HOME/.ssh/known_hosts
      deploy:
        provider: script
        script: bash $TRAVIS_BUILD_DIR/scripts/deploy-to-dev.sh
        on:
          branch: dev

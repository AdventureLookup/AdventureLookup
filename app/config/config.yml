imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    elasticsearch:
        index_name: 'adventure'
        type_name: 'all'

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        name: 'adl'
    fragments: ~
    http_method_override: true
    assets:
        json_manifest_path: '%kernel.project_dir%/web/assets/manifest.json'
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'bootstrap_4_layout.html.twig'
    globals:
        google_analytics_code: '%google_analytics_code%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_translator:
                type: annotation
                prefix: Gedmo\Translator\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree # (optional) it will default to the name set for the mapping
                is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            loggable: true
            sluggable: true
            blameable: true
            timestampable: true

knp_paginator:
    page_range: 5                # default page range used in pagination control
    default_options:
        page_name: page          # page query parameter name
        sort_field_name: sort    # sort field query parameter name
        sort_direction_name: dir # sort direction query parameter name
        distinct: true           # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: 'KnpPaginatorBundle:Pagination:twitter_bootstrap_v4_pagination.html.twig'
        sortable: 'KnpPaginatorBundle:Pagination:sortable_link.html.twig'

ewz_recaptcha:
    public_key:  '%recaptcha_public_key%'
    private_key: '%recaptcha_private_key%'

# EasyAdminBundle
# GitHub: https://github.com/javiereguiluz/EasyAdminBundle
# Docs:   http://symfony.com/doc/current/bundles/EasyAdminBundle/index.html
easy_admin:
    site_name: 'Adventure Lookup'
    design:
        menu:
            - Adventure
            - ChangeRequest
            - Author
            - Edition
            - Environment
            - Item
            - Monster
            - BossMonster
            - MonsterType
            - Publisher
            - Setting
            - User
            - { label: '' }
            - { label: 'Back to Frontend', route: 'homepage', icon: 'chevron-circle-left' }
    list:
        max_results: 30
    entities:
        Adventure:
            class: AppBundle\Entity\Adventure
            label: 'Adventures'
            disabled_actions: ['new', 'edit']
            list:
                title: "Adventures"
                fields: ['id', 'title']
                actions:
                    - { name: 'adventure_edit', type: 'route', label: 'Edit' }
        ChangeRequest:
            class: AppBundle\Entity\ChangeRequest
            label: 'Change Requests'
            list:
                title: 'Change Requests'
                fields: ['adventure', 'fieldName', 'comment', 'resolved', 'createdBy']
                sort: ['resolved', 'ASC']
            search:
                sort: ['resolved', 'ASC']
            form:
                fields: ['adventure', 'fieldName', 'comment', 'resolved']
        Author:
            class: AppBundle\Entity\Author
            label: 'Authors'
            form:
                fields: ['name']
            list:
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        Edition:
            class: AppBundle\Entity\Edition
            label: 'Editions'
            form:
                fields: ['name', 'position']
            list:
                sort: ['position', 'DESC']
            search:
                sort: ['position', 'DESC']
        Environment:
            class: AppBundle\Entity\Environment
            label: 'Environments'
            form:
                fields: ['name']
            list:
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        Item:
            class: AppBundle\Entity\Item
            label: 'Items'
            form:
                fields: ['name']
            list:
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        Monster:
            class: AppBundle\Entity\Monster
            label: 'Common Monsters'
            form:
                fields: ['name', 'types']
            list:
                dql_filter: "entity.isUnique = FALSE"
                fields: ['name', 'types', 'adventures', 'createdBy', 'updatedBy']
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        BossMonster:
            class: AppBundle\Entity\Monster
            label: 'Boss Monsters'
            form:
                fields: ['name', 'types']
            list:
                dql_filter: "entity.isUnique = TRUE"
                fields: ['name', 'types', 'adventures', 'createdBy', 'updatedBy']
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        MonsterType:
            class: AppBundle\Entity\MonsterType
            label: 'Monster Types'
            form:
                fields: ['name']
            list:
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        Publisher:
            class: AppBundle\Entity\Publisher
            label: 'Publishers'
            form:
                fields: ['name']
            list:
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        Setting:
            class: AppBundle\Entity\Setting
            label: 'Settings'
            form:
                fields: ['name']
            list:
                sort: ['name', 'ASC']
            search:
                sort: ['name', 'ASC']
        User:
            class: AppBundle\Entity\User
            label: 'Users'
            disabled_actions: ['new', 'delete']
            form:
                fields:
                    - isActive
                    - property: 'roles'
                      type: 'collection'
                      type_options:
                          entry_type: 'Symfony\Component\Form\Extension\Core\Type\ChoiceType'
                          entry_options:
                              choices:
                                  ROLE_USER: ROLE_USER
                                  ROLE_CURATOR: ROLE_CURATOR
                                  ROLE_ADMIN: ROLE_ADMIN
            list:
                title: "Users"
                fields: [username, email, roles]
                sort: ['roles', 'ASC']

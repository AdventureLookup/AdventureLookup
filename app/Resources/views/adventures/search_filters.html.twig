{% macro filter_checkbox(field, value, checked, count, hidden) %}
    {% set name = 'f[' ~ field.name ~ '][v][]' %}
    <div class="option{% if hidden %} d-none{% endif %}{% if checked %} filter-marked{% endif %}">
        <input type="checkbox" id="{{ name }}" name="{{ name }}" value="{{ value }}"
               {% if checked %}checked{% endif %}
        />

        <div>
            {{ value }}
            <span class="badge-pill badge badge-info">{{ count }}</span>
        </div>
    </div>
{% endmacro %}

{#
  Renders a filter block, note that filters which are not visible can still be shown via
  the ellipsis button at the bottom of the filter panel. Hidden filters are rendered as
  hidden elements to support secondary searches (the filter panel being the primary search)
#}
{% macro filter_field(field, stats, searchFilter, visible, hidden) %}
    {% import _self as macros %}
    {% set filter = searchFilter[field.name]|default([]) %}
    {% set classes = [] %}
    {% set classes = classes|merge(not visible ? ['d-none'] : []) %}
    {% set classes = classes|merge(field.type in ['boolean', 'integer'] ? ['open always-open'] : []) %}
    {% set classes = classes|merge(field.type == 'string' and filter['v'] is defined ? ['filter-marked'] : []) %}

    {% if hidden %}
        {% set value = filter['v']|default('') %}
        {% if value %}
        <input type="hidden" name="f[{{ field.name }}][v]" value="{{ value }}" >
        {% endif %}
    {% else %}
    <div class="filter {{ classes|join(' ') }}" id="filter-{{ field.name }}">
        <div class="title">{{ field.title }}</div>
        <div class="options-list">
            {#{% if field.description is not empty %}#}
                {#<p class="card-text small">{{ field.description }}</p>#}
            {#{% endif %}#}
            {% if field.type == 'string' %}
                {% set buckets = stats['vals_' ~ field.name]['buckets'] %}
                {% set showMoreAfter = 5 %}
                {% set valuesUsed = [] %}
                {% for bucket in buckets %}
                    {% set valuesUsed = valuesUsed|merge([bucket.key]) %}
                    {{ macros.filter_checkbox(field, bucket.key, bucket.key in filter['v']|default([]), bucket.doc_count, loop.index0 >= showMoreAfter) }}
                {% endfor %}
                {% for value in filter['v']|default([]) if value != '' and value not in valuesUsed %}
                    {{ macros.filter_checkbox(field, value, true, 0, false) }}
                {% endfor %}
                {% if buckets|length > showMoreAfter %}
                    <div class="option show-more"><i class="fa fa-arrow-down"></i></div>
                    <div class="option show-less"><i class="fa fa-arrow-up"></i></div>
                {% endif %}
            {% elseif field.type == 'boolean' %}
                <div class="option">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="{{ field.name }}-radio-1"
                               name="f[{{ field.name }}][v]" value=""
                               {% if filter['v']|default('') == '' %}checked{% endif %}
                        />
                        <label class="form-check-label" for="{{ field.name }}-radio-1">All</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="{{ field.name }}-radio-2"
                               name="f[{{ field.name }}][v]" value="1"
                               {% if filter['v']|default('') == '1' %}checked{% endif %}
                        />
                        <label class="form-check-label" for="{{ field.name }}-radio-2">Yes</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="{{ field.name }}-radio-3"
                               name="f[{{ field.name }}][v]" value="0"
                               {% if filter['v']|default('') == '0' %}checked{% endif %}
                        />
                        <label class="form-check-label" for="{{ field.name }}-radio-3">No</label>
                    </div>
                </div>
            {% elseif field.type == 'integer' %}
                <div class="option range-option">
                    <input type="number" name="f[{{ field.name }}][v][min]" id="filter-{{ field.name }}-min"
                           placeholder="min (inc.)" class="form-control form-control-sm"
                           value="{{ filter['v']|default({min: ''})['min'] }}"
                           title="min (inc.)"
                    />
                    <input type="number" name="f[{{ field.name }}][v][max]" id="filter-{{ field.name }}-max"
                           placeholder="max (inc.)" class="form-control form-control-sm"
                           value="{{ filter['v']|default({max: ''})['max'] }}"
                           title="max (inc.)"
                    />
                </div>
            {% endif %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% import _self as macros %}
{% set showMoreAfter = 11 %}
{% set visible_fields = [
  'publisher',
  'setting',
  'edition',
  'environments',
  'items',
  'bossMonsters',
  'commonMonsters',
  'numPages',
  'minStartingLevel',
  'maxStartingLevel',
  'startingLevelRange',
  'soloable',
  'pregeneratedCharacters',
  'handouts',
  'tacticalMaps',
  'partOf',
  'foundIn'
 ]
%}
{% for field in fields %}
    {% set showMoreAfter = showMoreAfter - (field.name in visible_fields) %}
    {{ macros.filter_field(field, stats, searchFilter, showMoreAfter > 0, field.name not in visible_fields) }}
{% endfor %}
